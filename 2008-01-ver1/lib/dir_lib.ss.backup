(load "str_lib")

(define (create-file filename)
	(let ((f (open-output-file filename)))
		(close-output-port f)))


(define (path-append . paths)
	
	(define (get-first-char str) (string-ref str 0))
	(define (get-last-char str) (string-ref str (- (string-length str) 1)))
	
	(define (char-slash? char-fun str)
		(if (= (string-length str) 0)
				#t
				(let ((char (char-fun str)))
					(or (char=? char #\\) (char=? char #\/)))))
	
	(define (last-slash? str)
		(char-slash? get-last-char str))
	(define (first-slash? str)
		(char-slash? get-first-char str))		
	
	(define (remove-slashes str)
		(let ((start (if (first-slash? str) 1 0))
				(end (if (last-slash? str)
							(- (string-length str) 1)
							(string-length str))))
			(substring str start end)))
		
	
	(define (path-append-rec paths)
		(if (null? paths) '()
			(cons #\\ (cons (remove-slashes (car paths))
						(path-append-rec (cdr paths))))))
						
	(if (null? paths) '()
			(apply build-string (cdr (path-append-rec paths)))))



;;(define (delete-directory directory-path) #f)